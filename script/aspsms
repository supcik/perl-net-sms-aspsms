#!/usr/bin/env perl

#----------------------------------------------------------------------------
# aspsms version 0.1.1
#----------------------------------------------------------------------------
# Copyright (c) 2009 Jacques Supcik
#----------------------------------------------------------------------------

use version; $VERSION = qv('0.1.1');

use strict;
use warnings;
use Carp;
use Getopt::Long;
use Net::SMS::ASPSMS;

my %opt = ();

foreach (qw(userkey password originator)) {
    $opt{$_} = $ENV{'ASPSMS_' . uc($_)} if defined $ENV{
        'ASPSMS_' . uc($_)
        };
}

GetOptions(
    \%opt, qw(
        operation=s
        userkey=s
        password=s
        originator=s
        recipient-phone-number=s
        )
);

if (not defined $opt{operation}) {
    if ($0 =~ /.*-(.*?)(?:\.pl)?$/) {
        $opt{operation} = $1;
    } elsif (defined $ARGV[0]) {
        $opt{operation} = shift @ARGV;
    } else {
        $opt{operation} = 'send_text_sms';
    }
}

my $sms = new Net::SMS::ASPSMS(
    userkey  => $opt{userkey},
    password => $opt{password},
);

sub show_credits {
    $sms->show_credits();
    printf "You still have %s units\n", $sms->result->{Credits};
}

sub send_text_sms {
    my $message_data;
    {
        local $/; # enable localized slurp mode
        $message_data = <STDIN>;
    }

    $sms->send_text_sms(
        Recipient_PhoneNumber => $opt{'recipient-phone-number'},
        Originator            => $opt{originator},
        MessageData           => $message_data
    );
    printf "Result: %s\n", $sms->result->{ErrorDescription};
}

eval {
    no strict qw(refs);
    $opt{operation}->();
};

if ($@ =~ /^Undefined subroutine/) {
    printf "Unknown operation: %s\n", $opt{operation};
}

__END__

=head1 NAME

aspsms - A simple script to ASMSMS services (using Net::SMS::ASPSMS)

=head1 VERSION

This document describes aspsms version 0.1.1

=head1 SYNOPSIS


  echo "Hello" | smsasp --userkey=MyUserKey --password=SecReT \
                        --originator=Me     --recipient=+5150123456

  export ASPSMS_USERKEY="MyUserKey"
  export ASPSMS_PASSWORD="SecReT"
  echo "Hello" | smsasp --originator=Me --recipient=+5150123456

  smsasp --operation=show_credits

  smsasp show_credits

=head1 DESCRIPTION

There are no known bugs in this script. 
Please report problems to Jacques Supcik C<< <supcik@cpan.org> >>.
Patches are welcome.


=head1 AUTHOR

Jacques Supcik  C<< <supcik@cpan.org> >>

=head1 LICENCE AND COPYRIGHT

Copyright (c) 2009, Jacques Supcik C<< <supcik@cpan.org> >>.
All rights reserved.

This module is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.

=head1 DISCLAIMER OF WARRANTY

BECAUSE THIS SOFTWARE IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
FOR THE SOFTWARE, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN
OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
PROVIDE THE SOFTWARE "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE
ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE SOFTWARE IS WITH
YOU. SHOULD THE SOFTWARE PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL
NECESSARY SERVICING, REPAIR, OR CORRECTION.

IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
REDISTRIBUTE THE SOFTWARE AS PERMITTED BY THE ABOVE LICENCE, BE
LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL,
OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE
THE SOFTWARE (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING
RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A
FAILURE OF THE SOFTWARE TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF
SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
SUCH DAMAGES.

